{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/parts/calc.js","webpack:///./src/js/parts/forms.js","webpack:///./src/js/parts/modal.js","webpack:///./src/js/parts/scrolls.js","webpack:///./src/js/parts/slider.js","webpack:///./src/js/parts/tabs.js","webpack:///./src/js/parts/time.js","webpack:///./src/js/script.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAkB;;AAElB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D,EAAE;AAC7D;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;AAEA;;;;;;;;;;;;AC3CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,wDAAwD;AACxD,kCAAkC;AAClC;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA,uDAAuD;AACvD,uDAAuD;AACvD;AACA,+EAA+E;AAC/E;;AAEA;AACA;AACA,qDAAqD;AACrD,sCAAsC;AACtC,yBAAyB,6DAA6D;AACtF,sCAAsC;AACtC,yBAAyB;AACzB,qCAAqC;AACrC;AACA,qBAAqB;;AAErB;AACA,iCAAiC;AACjC,uDAAuD;AACvD;AACA,qBAAqB;AACrB;AACA,mDAAmD;AACnD,uCAAuC;AACvC,iBAAiB;AACjB;;AAEA,oCAAoC;AACpC,+BAA+B,kBAAkB;AACjD,wCAAwC;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,YAAY,EAAE;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yDAAyD;AACzD,kCAAkC;AAClC,+BAA+B;;AAE/B;;AAEA;AACA,KAAK;;;;AAIL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;;;;;;;;;;;;ACtGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA,yB;;;;;;;;;;;ACpBA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8D;AACA;AACA,0BAA0B,mBAAmB;AAC7C;AACA;;;AAGA;AACA,oE;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,2B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,uBAAuB,qBAAqB;;AAE5C;AACA;AACA;AACA,S;AACA,KAAK;AACL;;AAEA;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA,mEAAmE;;AAEnE;AACA;AACA,uBAAuB,uBAAuB;AAC9C,mDAAmD;AACnD,gDAAgD;AAChD;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA,mDAAmD;AACnD,gDAAgD;AAChD;AACA;;AAEA;AACA;AACA;AACA,qEAAqE;AACrE,2BAA2B,gBAAgB,OAAO;AAClD,uCAAuC;AACvC,sCAAsC;AACtC,sCAAsC;AACtC,0BAA0B;AAC1B;AACA,a;AACA;AACA,KAAK;AACL;;AAEA,sB;;;;;;;;;;;ACvCA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,U;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,0DAA0D;AAC1D;AACA;AACA;;AAEA;;;;;;;;;;;;ACvDA;;AAEA,iBAAiB;;AAEjB;AACA,eAAe,mBAAO,CAAC,+CAAiB;AACxC;AACA,eAAe,mBAAO,CAAC,+CAAiB;AACxC;AACA,kBAAkB,mBAAO,CAAC,qDAAoB;AAC9C;AACA,eAAe,mBAAO,CAAC,+CAAiB;AACxC;AACA,iBAAiB,mBAAO,CAAC,mDAAmB;AAC5C;AACA,gBAAgB,mBAAO,CAAC,iDAAkB;AAC1C;AACA,gBAAgB,mBAAO,CAAC,iDAAkB;;;;;AAK1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/script.js\");\n","let calc = () => {\r\n    // Calc      КАЛЬКУЛЯТОР\r\n\r\n    // получим два инпута; базу на которой будут отдыхать;\r\n    let persons = document.querySelectorAll('.counter-block-input')[0],\r\n        restDays = document.querySelectorAll('.counter-block-input')[1],\r\n        place = document.getElementById('select'),\r\n\r\n        totalValue = document.getElementById('total'), //общую сумму поездки\r\n        \r\n        personsSum = 0, // количество людей\r\n        daysSum = 0, // на сколько дней\r\n        total = 0; // итоговое значение общей суммы\r\n\r\n    // запишем 0 в общую сумму на странице\r\n    totalValue.innerHTML = 0;\r\n  \r\n\r\n    //валидация input в поле телефона и калькулятор\r\n    document.body.addEventListener('input', e => {\r\n        if (e.target.getAttribute('type') === 'tel') {\r\n            e.target.value = '+' + e.target.value.replace(/[^\\d]/g, '').slice(0, 11);\r\n            if (e.target.value.length == 1) e.target.value = '';\r\n        }\r\n\r\n        if (e.target.classList == 'counter-block-input') {\r\n            e.target.value = e.target.value.replace(/(^[0]{1})/, '');\r\n        }\r\n\r\n        personsSum = +persons.value;\r\n        daysSum = +restDays.value;\r\n\r\n        total = (daysSum + personsSum) * 4000;\r\n\r\n        if (restDays.value === '' || persons.value === '') {\r\n            totalValue.innerHTML = 0;\r\n        } else {\r\n            let a = total;\r\n            totalValue.innerHTML = a * place.options[place.selectedIndex].value;\r\n        }\r\n    });\r\n};\r\n\r\nmodule.exports = calc;\r\n","let forms = () => {\r\n    // // FORM с промисами\r\n\r\n    // объект с сообщениями, с различными состояниями нашего запроса\r\n    let message = {\r\n        loading: 'Загрузка...', // будет показываться пользователю когда наш запрос ещё не обработался\r\n        success: 'Спасибо! Скоро мы с вами свяжемся!',\r\n        failure: 'Что-то пошло не так...' //если сервер не отвечает\r\n    };\r\n\r\n    //\r\n    let form = document.getElementsByClassName('main-form')[0], // форма в модальном окне\r\n        formBottom = document.getElementById('form'), // контактная форма\r\n        input = document.getElementsByTagName('input'),  // все input'ы        \r\n        // создадим новый div на странице\r\n        statusMessage = document.createElement('div');\r\n        // добавим к переменной класс\r\n        statusMessage.classList.add('status');\r\n    ///// запрос на сервер\r\n    // в любой форме для отправки данных необходимо чтобы был (button)  или  (input type=submit)\r\n\r\n\r\n    // событие формы\r\n    let sendForm = (elem) => {\r\n        // elem.addEventListener('submit', function(e) { // для 1 варианта вызова\r\n            // e.preventDefault();  // для 1 варианта вызова\r\n            elem.appendChild(statusMessage);\r\n            let formData = new FormData(elem); // помещаем сюда всё то что ответил пользователь (пара ключ: значение)\r\n            // создаем новый объект в который мы поместим все эти данные\r\n\r\n            function postData(data) {\r\n                return new Promise(function(resolve, reject) {\r\n                    // сам запрос\r\n                    let request = new XMLHttpRequest(); // запрос\r\n                    request.open('POST', 'server.php'); // POST - для отправки введенных пользователем данных / URL нашего сервера\r\n                    // заголовок запроса. вариант для JSON файлов , а не обычная форма\r\n                    request.setRequestHeader('Content-type', 'application/json; charset=utf-8');\r\n                    // получить данные которые ввел пользователь\r\n\r\n                    // для того чтобы наблюдать за изменениями состояния нашего запроса\r\n                    request.addEventListener('readystatechange', () => {\r\n                        if (request.readyState < 4) { // наш запрос грузится если сервер будет долго отвечать \r\n                            resolve(); // 'Загрузка...' это если сервер немножко тупит\r\n                        } else if (request.readyState == 4 && request.status == 200) { // если всё прошло успешно и сервер ответил 200-ым кодом и наш запрос уже в 4-ом состоянии\r\n                            resolve(); // 'Спасибо! Скоро мы с вами свяжемся!' \r\n                        } else {\r\n                            reject(); // ''Что-то пошло не так...'                 \r\n                        }\r\n                    });\r\n\r\n                    ////////// вариант для JSON \r\n                    let obj = {}; // \r\n                    data.forEach(function(value, key) { // берем все данные из formData и помещаем в obj\r\n                        obj[key] = value;\r\n                    });\r\n                    // превращаем обычные JS объекты в JSON формат\r\n                    let json = JSON.stringify(obj); // получаем переменную со всеми данными в формате JSON, его мы и отправляем на сервер\r\n                    request.send(json); // отправляет запрос на сервер\r\n                })                \r\n            }\r\n\r\n            let clearInput = () => { // чтобы автоматически очищалось поле инпута\r\n                for (let i = 0; i < input.length; i++) {\r\n                    input[i].value = ''; // возмем каждый инпут тот что есть в форме, у каждого инпута возмем value и превратим в пустую строку\r\n                }\r\n            };\r\n\r\n            postData(formData)\r\n                .then( ()=> statusMessage.innerHTML = message.loading)\r\n                .then( ()=> statusMessage.innerHTML = message.success)\r\n                .catch( ()=> statusMessage.innerHTML = message.failure)\r\n                .then(clearInput)\r\n \r\n        // }); // для 1 варианта вызова\r\n    };\r\n\r\n    // можно вызвать так(1 вариант):\r\n    // sendForm(form);\r\n    // sendForm(formBottom);\r\n\r\n    // или так:\r\n    // // надо вешать НА ФОРМУ,  НЕ НА КНОПКУ.  Следим чтобы форма отправлялась\r\n    document.body.addEventListener('submit', (event) => {  // submit - всегда отправка  СРАБАТЫВАЕТ ТОЛЬКО НА ФОРМАХ\r\n        let target = event.target; // event. где произошло событие\r\n        event.preventDefault(); // чтобы не перезагружалась страница отменим стандартное поведение\r\n\r\n        sendForm(target);\r\n\r\n        // console.log(target);\r\n    });\r\n\r\n\r\n    \r\n    // // валидация input в поле телефона\r\n    // document.body.addEventListener('input', e => {\r\n    //     if (e.target.getAttribute('type') === 'tel') {\r\n    //         e.target.value = '+' + e.target.value.replace(/[^\\d]/g, '').slice(0, 11);\r\n    //         if (e.target.value.length == 1) e.target.value = '';\r\n    //     }\r\n    // });\r\n};\r\n\r\nmodule.exports = forms;\r\n","// \r\nlet modal = () => {\r\n    // Modal ( наше модальное окно)\r\n\r\n    let overlay = document.querySelector('.overlay');\r\n        // more = document.querySelector('.more'),\r\n        // close = document.querySelector('.popup-close'),\r\n        // content = document.querySelector('.content');\r\n        // body = document.querySelector('body');\r\n\r\n    //функция для всех кнопок УЗНАТЬ ПОДРОБНЕЕ в табах и для УЗНАТЬ БОЛЬШЕ\r\n    let bindModal = ( btn, overlayStatus, overflowStatus ) => {\r\n        overlay.style.display = overlayStatus;\r\n        btn.classList.add('more-splash');\r\n        document.body.style.overflow = overflowStatus;\r\n        setTimeout(() => {\r\n            btn.classList.remove('more-splash');\r\n        }, 1500);\r\n    };\r\n\r\n    //событие при клике\r\n    document.body.addEventListener('click', (e) => {\r\n        let target = e.target;\r\n        (target.classList.contains('more') || target.classList.contains('description-btn')) ? bindModal(target, 'block', 'hidden') : '';\r\n        (target.classList.contains('popup-close')) ? bindModal(target, 'none', '') : '';\r\n    });\r\n};\r\n\r\nmodule.exports = modal;\r\n","// \r\nlet scrolls = () => {\r\n    // плавная анимация\r\n    // достаем все якоря \r\n    let anchors = document.querySelectorAll('a[href*=\"#\"]');\r\n\r\n    for (let anchor of anchors) {\r\n        anchor.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n        \r\n            let blockID = anchor.getAttribute('href');\r\n        \r\n            document.querySelector(` ${blockID}`).scrollIntoView({\r\n                behavior: 'smooth',\r\n                block: 'start'\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nmodule.exports = scrolls;","// \r\nlet slider = () => {\r\n    ///////    СЛАЙДЕР      Slider\r\n\r\n    //переменная которая отвечает за то, какой слайд показывается\r\n    let slideIndex = 1,\r\n\r\n    // сами слайды. получаем все слайды\r\n        slides = document.querySelectorAll('.slider-item'),\r\n    // элементы навигации, стрелочки ВПЕРЕД и НАЗАД\r\n        prev = document.querySelector('.prev'),\r\n        next = document.querySelector('.next'),\r\n    // взаимодействие с нашими точками. получаем обертку точек и сами точки\r\n        dotsWrap = document.querySelector('.slider-dots'),\r\n        dots = document.querySelectorAll('.dot');\r\n    //\r\n\r\n    let showSlides = (n) => {\r\n   \r\n        if (n > slides.length) {\r\n            slideIndex = 1;\r\n        }\r\n\r\n        if (n < 1) {\r\n            slideIndex = slides.length;\r\n        }\r\n \r\n        slides.forEach((item) => item.style.display = 'none');     \r\n        // //     ! старый аналогичный способ !\r\n        // for (let i = 0; i < slides.length; i++) {\r\n        //     slides[i].style.display = 'none';\r\n        // }\r\n\r\n\r\n        // удаляем класс dot-active\r\n        dots.forEach((item) => item.classList.remove('dot-active')); \r\n\r\n        // покажем тот слайд который нам нужен\r\n\r\n        slides[slideIndex - 1].style.display = 'block';\r\n\r\n        // добавляем класс dot-active\r\n        dots[slideIndex - 1].classList.add('dot-active');\r\n    };\r\n\r\n    showSlides(slideIndex); \r\n\r\n    // функция которая увеличивает наш параметр slideIndex\r\n    let plusSlides = (n) => {\r\n        showSlides(slideIndex += n);\r\n    }\r\n\r\n    // функция которая определяет текущий слайд и устанавливает его\r\n    let currentSlide = (n) => {\r\n        showSlides(slideIndex = n);\r\n    }\r\n\r\n    // кнопки стрелочка назад и стрелочка вперед\r\n    prev.addEventListener('click', () => {\r\n        plusSlides(-1);\r\n    });\r\n    next.addEventListener('click', () => {\r\n        plusSlides(1);\r\n    });\r\n\r\n    // реализуем точки\r\n    dotsWrap.addEventListener('click', (event) => {\r\n\r\n        for (let i = 0; i < dots.length + 1; i++) {\r\n\r\n            if (event.target.classList.contains('dot') && event.target == dots[i - 1]) {\r\n                currentSlide(i);\r\n            }\r\n        }      \r\n    });\r\n};\r\n\r\nmodule.exports = slider;\r\n","let tabs = () => {\r\n    // ТАБЫ \r\n    let info = document.querySelector('.info-header'), // родитель табов\r\n        tab = document.querySelectorAll('.info-header-tab'), // табы \r\n        tabContent = document.querySelectorAll('.info-tabcontent'); //сам контент\r\n\r\n    // функция которая скрывает все наши таб конттенты\r\n    let hideTabContent = (a) => {\r\n        for (let i = a; i < tabContent.length; i++) {\r\n            tabContent[i].classList.remove('show');// удалим у них класс show, и чтобы полностью скрыть \r\n            tabContent[i].classList.add('hide'); //  элементы со страницы, добавлю класс hide\r\n        }\r\n    };\r\n\r\n    hideTabContent(1); // скрывает все кроме самого первого( с индексом 0)\r\n\r\n    // функция которая показывает определенный таб контент\r\n    let showTabContent = (b) => {\r\n        if (tabContent[b].classList.contains('hide')) {\r\n            tabContent[b].classList.remove('hide');// удалим у них класс hide, и чтобы полностью показать \r\n            tabContent[b].classList.add('show'); //  элемент , добавлю класс show\r\n        }\r\n    };\r\n\r\n    // делегирование события от родителя\r\n    info.addEventListener('click', (event) => {\r\n        let target = event.target;\r\n        if (target && target.classList.contains('info-header-tab')) { //если то куда нажали имеет класс Х, то\r\n            for (let i = 0; i < tab.length; i++) { // перебираем все \r\n                if (target == tab[i]) { // и сравниваем с нажатым, если это он, то\r\n                    hideTabContent(0); // cкрывает абсолютно все таб контенты\r\n                    showTabContent(i); // показывает нужный таб контент\r\n                    break; // завершаем цикл\r\n                }\r\n            } \r\n        }\r\n    });\r\n};\r\n\r\nmodule.exports = tabs;","// \r\nlet time = () => {\r\n// Timer\r\n    let deadLine = '2019-06-03'; //наш дэдлайн, по какое время\r\n    \r\n    // функция получает все данные о времени\r\n    let getTimeRemaining = (endtime) => {\r\n        let t = Date.parse(endtime) - Date.parse(new Date());\r\n\r\n        let seconds = Math.floor((t/1000) % 60),\r\n            minutes = Math.floor((t/1000/60) % 60),\r\n            hours = Math.floor((t / (1000*60*60)));\r\n\r\n        return {\r\n            'total' : (t > 0) ? t : '0',\r\n            'hours' : (t > 0) ? hours : '0',\r\n            'minutes' : (t > 0) ? minutes : '0',\r\n            'seconds' : (t > 0) ? seconds : '0'\r\n        };    \r\n    };\r\n\r\n    // устанавливает наши часы\r\n    let setClock = (id, endtime) => {\r\n        let timer = document.getElementById(id),\r\n            hours = timer.querySelector('.hours'),\r\n            minutes = timer.querySelector('.minutes'),\r\n            seconds = timer.querySelector('.seconds'),\r\n        // функция которая будет обновлять наши часы каждую секунду\r\n        //получает разницу между временем\r\n            updateClock = () => {\r\n                let t = getTimeRemaining(endtime);\r\n                //подставлять 0 перед значениями, которые состоят из одной цифры\r\n                let finalDateFunc = () => { \r\n                    let finalDateFunc = {};\r\n                    for (let i in t) {\r\n                        finalDateFunc[i] = ( (parseInt(t[i]) < 10 ) ? ('0'+t[i]) : (t[i]) );\r\n                    }\r\n                    return finalDateFunc;\r\n                };\r\n                \r\n                let finalDate = finalDateFunc();\r\n\r\n                // из полученных данных мы записываем эти данные прямо в верстку:\r\n                hours.textContent = finalDate.hours;\r\n                minutes.textContent = finalDate.minutes;\r\n                seconds.textContent = finalDate.seconds;\r\n\r\n                //как только разница дойдет до нуля остановим интервал таймер\r\n                (finalDate.total <= 0) ? (clearInterval(timeInterval)) : '';\r\n            },\r\n            timeInterval = setInterval(updateClock, 1000);// интервал, каждую секунду запуск функции updateClock \r\n    };\r\n    setClock('timer', deadLine );\r\n};\r\n\r\nmodule.exports = time;\r\n","window.addEventListener('DOMContentLoaded', () => {\r\n\r\n    \"use strict\"; // переведем весь наш код в строгий режим\r\n\r\n    // ТАБЫ \r\n    let tabs = require('./parts/tabs.js'),\r\n    // Timer. устанавливает наши часы\r\n        time = require('./parts/time.js'),\r\n    // плавная анимация\r\n        scrolls = require('./parts/scrolls.js'),\r\n    // Calc и валидация input в поле телефона и калькулятор\r\n        calc = require('./parts/calc.js'),\r\n    //  СЛАЙДЕР      Slider\r\n        slider = require('./parts/slider.js'),\r\n    // Modal ( наше модальное окно)\r\n        modal = require('./parts/modal.js'),\r\n    // FORM с промисами\r\n        forms = require('./parts/forms.js');\r\n\r\n\r\n\r\n\r\n    tabs();\r\n    time();\r\n    scrolls();\r\n    calc();\r\n    slider();\r\n    modal();\r\n    forms();\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}